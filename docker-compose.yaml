volumes:
  db:
  redis-data:

services:
  mysql:
    container_name: mysql
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=taskList'
      - 'MYSQL_PASSWORD=admin'
      - 'MYSQL_ROOT_PASSWORD=admin'
      - 'MYSQL_USER=admin'
    ports:
      - '3306:3306'
    volumes:
      - db:/var/lib/mysql
    networks:
      - kafka-network
  redis:
    image: 'redis:latest'
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data
  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - kafka-network

  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - kafka-network
#  task-list-backend:
#    image: task-list/task-list-backend:1.0-${QUARKUS_MODE:-jvm}
#    build:
#      context: task-list-backend
#      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
#    depends_on:
#      - kafka
#      - mysql
#    environment:
#      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8080:8080"
#    networks:
#      - kafka-network
#
#  task-list-mail:
#    image: task-list/task-list-mail:1.0-${QUARKUS_MODE:-jvm}
#    build:
#      context: task-list-mail
#      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
#    depends_on:
#      - kafka
#    environment:
#      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8081:8080"
#    networks:
#      - kafka-network
networks:
  kafka-network:
    name: kafkastart